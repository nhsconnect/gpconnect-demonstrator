<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright 2015 Ripple OSI
~
~      Licensed under the Apache License, Version 2.0 (the "License");
~      you may not use this file except in compliance with the License.
~      You may obtain a copy of the License at
~
~          http://www.apache.org/licenses/LICENSE-2.0
~
~      Unless required by applicable law or agreed to in writing, software
~      distributed under the License is distributed on an "AS IS" BASIS,
~      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~      See the License for the specific language governing permissions and
~      limitations under the License.
~
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>uk.gov.hscic</groupId>
    <artifactId>gpconnect</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>GPConnect 1.2.7</name>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.17.RELEASE</version>
    </parent>

    <properties>
        <java.version>11</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <fhir.version>3.0.0</fhir.version>
    </properties>

    <modules>
        <module>gpconnect-core</module>
        <module>gpconnect-database</module>
        <module>gpconnect-demonstrator-api</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>uk.gov.hscic</groupId>
                <artifactId>gpconnect-core</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>uk.gov.hscic</groupId>
                <artifactId>gpconnect-database</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>5.1.42</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>4.1</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.5</version>
            </dependency>

            <dependency>
                <groupId>ca.uhn.hapi.fhir</groupId>
                <artifactId>hapi-fhir-base</artifactId>
                <version>${fhir.version}</version>
            </dependency>
            
            <dependency>
                <groupId>ca.uhn.hapi.fhir</groupId>
                <artifactId>hapi-fhir-server</artifactId>
                <version>${fhir.version}</version>
            </dependency>

            <dependency>
                <groupId>ca.uhn.hapi.fhir</groupId>
                <artifactId>hapi-fhir-structures-dstu2</artifactId>
                <version>${fhir.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.directory.api</groupId>
                <artifactId>api-all</artifactId>
                <version>1.0.0</version>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>2.8.9</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.mysema.maven</groupId>
                    <artifactId>apt-maven-plugin</artifactId>
                    <version>1.1.3</version>
                </plugin>

                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.7.9</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <source>11</source>
                        <target>11</target>
                        <fork>true</fork>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
                
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M4</version>
                    <configuration>
                        <!--
                        <argLine>-Dsurefire.junit4.upgradecheck</argLine>
                        <testFailureIgnore>true</testFailureIgnore>
                        <testErrorIgnore>true</testErrorIgnore>
                        -->
                        <!-- This  (Setting forkCount to 1) is critical otherwise all the tests run in a single jvm 
                       This plays havoc due to singletons like configurator not being reset between test classes
                       see http://maven.apache.org/surefire/maven-surefire-plugin/examples/fork-options-and-parallel-execution.html 
                        -->
                        <forkCount>0</forkCount>
                        <reuseForks>true</reuseForks>
                    
                        <!-- set this to true for a development cycle that is shorter than war and peace -->
                        <skipTests>true</skipTests>
                    
                    </configuration> 
                </plugin> 


            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
